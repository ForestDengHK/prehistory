---
import Layout from '../../layouts/Layout.astro';
import { creatures } from '../../data/creatures';
import { marked } from 'marked';
import CommentButton from '../../components/CommentButton.astro';
import CommentList from '../../components/CommentList.astro';
import ShareButton from '../../components/ShareButton.astro';

const { id } = Astro.params;
const creature = creatures.find(c => c.id === id);

if (!creature) {
  return Astro.redirect('/404');
}

// Process both Markdown and HTML in the description
const formattedDescription = marked(creature.description);

// Create SEO description
const seoDescription = `Learn about ${creature.name} (${creature.scientificName}), a ${creature.diet.toLowerCase()} creature from the ${creature.period}. Discover its habitat in ${creature.location}, measuring ${creature.length} in length and weighing ${creature.weight}.`;

// Create structured data for the creature
const structuredData = {
  "@context": "https://schema.org",
  "@type": "Article",
  "headline": `${creature.name} - Prehistoric Creature Profile`,
  "description": seoDescription,
  "image": creature.image,
  "author": {
    "@type": "Person",
    "name": "Xinhao"
  },
  "publisher": {
    "@type": "Organization",
    "name": "Prehistoric World",
    "logo": {
      "@type": "ImageObject",
      "url": "https://www.xinhao.eu/images/logo.png"
    }
  },
  "datePublished": "2024-01-01T00:00:00Z",
  "dateModified": new Date().toISOString(),
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": `https://www.xinhao.eu/creature/${creature.id}`
  },
  "keywords": [
    creature.name,
    creature.scientificName,
    creature.period,
    creature.category,
    creature.subcategory,
    "prehistoric creatures",
    "dinosaurs",
    "ancient life"
  ].join(", ")
};

// Add this near other data preparation
const shareUrl = new URL(Astro.url.pathname, Astro.site).toString();
const shareTitle = `Check out ${creature.name} - ${creature.shortDescription}`;
const shareDescription = creature.description;
const shareImage = creature.image;

---

<Layout 
  title={`${creature.name} | Prehistoric Creatures`}
  description={seoDescription}
  image={creature.image}
  type="article"
>
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
  
  <div class="creature-container">
    <div class="creature-hero" style={`background-image: linear-gradient(rgba(0,0,0,0.6), rgba(0,0,0,0.6)), url(${creature.image})`}>
      <h1>{creature.name}</h1>
      <p class="scientific-name">{creature.scientificName}</p>
    </div>

    <div class="creature-content">
      <div class="creature-info">
        <div class="info-grid">
          <div class="info-item">
            <h3>Period</h3>
            <p><a href={`/timeline/${creature.period.split(' ')[0].toLowerCase()}`}>{creature.period}</a></p>
          </div>
          <div class="info-item">
            <h3>Location</h3>
            <p>{creature.location}</p>
          </div>
          <div class="info-item">
            <h3>Length</h3>
            <p>{creature.length}</p>
          </div>
          <div class="info-item">
            <h3>Weight</h3>
            <p>{creature.weight}</p>
          </div>
          <div class="info-item">
            <h3>Diet</h3>
            <p>{creature.diet}</p>
          </div>
          <div class="info-item">
            <h3>Category</h3>
            <p>
              <a href={`/category/${creature.category.toLowerCase().replace(/\s+/g, '-')}`}>{creature.category}</a> - 
              <a href={`/category/${creature.category.toLowerCase().replace(/\s+/g, '-')}/${creature.subcategory.toLowerCase().replace(/\s+/g, '-')}`}>{creature.subcategory}</a>
            </p>
          </div>
          <div class="info-item">
            <h3>Family</h3>
            <p>{creature.family}</p>
          </div>
        </div>

        <div class="description">
          <h2>About {creature.name}</h2>
          <div class="markdown-content" set:html={formattedDescription} />
        </div>

        <div class="engagement-section">
          <ShareButton 
            url={shareUrl}
            title={shareTitle}
            description={shareDescription}
            image={shareImage}
          />
          <CommentList creatureId={creature.id} />
        </div>
      </div>
    </div>

    <CommentButton creatureId={creature.id} />
  </div>
</Layout>

<style>
  .creature-container {
    margin: -2rem;
  }

  .creature-hero {
    padding: 6rem 2rem;
    text-align: center;
    color: white;
    background-size: cover;
    background-position: center;
  }

  .creature-hero h1 {
    font-size: 3.5rem;
    margin-bottom: 1rem;
  }

  .scientific-name {
    font-style: italic;
    font-size: 1.5rem;
    opacity: 0.9;
  }

  .creature-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  .info-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
    background: white;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }

  .info-item h3 {
    color: var(--primary-color);
    margin-bottom: 0.5rem;
    font-size: 1.1rem;
  }

  .info-item p {
    color: var(--secondary-color);
  }

  .info-item p a {
    color: var(--accent-color);
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .info-item p a:hover {
    color: var(--primary-color);
  }

  .info-item a {
    color: var(--accent-color);
    text-decoration: none;
  }

  .info-item a:hover {
    text-decoration: underline;
  }

  .description {
    background: white;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    margin-bottom: 1rem;
  }

  .description h2 {
    color: var(--primary-color);
    margin-bottom: 1rem;
    font-size: 1.8rem;
  }

  .markdown-content {
    color: var(--secondary-color);
    line-height: 1.6;
  }

  .markdown-content p {
    margin-bottom: 1rem;
  }

  .markdown-content p:last-child {
    margin-bottom: 0;
  }

  .markdown-content strong {
    color: var(--primary-color);
    font-weight: 600;
  }

  .markdown-content em {
    font-style: italic;
  }

  .markdown-content ul,
  .markdown-content ol {
    margin: 1rem 0;
    padding-left: 2rem;
  }

  .markdown-content li {
    margin-bottom: 0.5rem;
  }

  .markdown-content a {
    color: var(--accent-color);
    text-decoration: none;
  }

  .markdown-content a:hover {
    text-decoration: underline;
  }

  .markdown-content blockquote {
    border-left: 4px solid var(--accent-color);
    margin: 1rem 0;
    padding-left: 1rem;
    color: var(--secondary-color);
    font-style: italic;
  }

  .markdown-content code {
    background: var(--background-color);
    padding: 0.2rem 0.4rem;
    border-radius: 4px;
    font-size: 0.9em;
  }

  .markdown-content pre {
    background: var(--background-color);
    padding: 1rem;
    border-radius: 4px;
    overflow-x: auto;
    margin: 1rem 0;
  }

  .markdown-content pre code {
    background: none;
    padding: 0;
  }

  @media (max-width: 768px) {
    .creature-hero h1 {
      font-size: 2.5rem;
    }

    .scientific-name {
      font-size: 1.2rem;
    }

    .info-grid {
      grid-template-columns: 1fr;
    }

    .engagement-section {
      padding: 1rem;
    }
  }

  .creature-detail {
    position: relative;
  }

  .engagement-section {
    margin-top: 0;
    background: white;
    padding: 1rem 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }

  .engagement-section :global(.share-section) {
    margin: 0 0 0.5rem 0;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--border-color, #eee);
  }
</style>