---
import Layout from '../../../layouts/Layout.astro';
import { categories } from '../../../data/categories';
import { creatures } from '../../../data/creatures';

const { category: categoryParam } = Astro.params;
const category = Object.entries(categories).find(([name]) => 
  name.toLowerCase().replace(/\s+/g, '-') === categoryParam
);

if (!category) {
  return Astro.redirect('/404');
}

const [categoryName, subcategories] = category;
const categoryCreatures = creatures.filter(creature => 
  creature.category === categoryName
);

const categoryImage = `/public/images/categories/${categoryName.toLowerCase().replace(/\s+/g, '-')}.jpg`;
const categoryDescription = `Explore ${categoryName} from prehistoric times.`;
---

<Layout title={`${categoryName} - Prehistoric World`}>
  <div class="category-container">
    <div class="category-hero" style={`background-image: linear-gradient(rgba(0,0,0,0.6), rgba(0,0,0,0.6)), url(${categoryImage})`}>
      <h1>{categoryName}</h1>
      <p>{categoryDescription}</p>
    </div>

    <div class="subcategories">
      {subcategories.map(sub => (
        <a href={`/category/${categoryName.toLowerCase().replace(/\s+/g, '-')}/${sub.toLowerCase().replace(/\s+/g, '-')}`} 
           class="subcategory-link">
          {sub}
        </a>
      ))}
    </div>

    <div class="creatures-grid">
      {categoryCreatures.map(creature => (
        <a href={`/creature/${creature.id}`} class="creature-card">
          <div class="creature-image">
            <img src={creature.image} alt={creature.name} />
          </div>
          <div class="creature-info">
            <h3>{creature.name}</h3>
            <p class="period">{creature.period}</p>
            <p class="subcategory">{creature.subcategory}</p>
          </div>
        </a>
      ))}
    </div>
  </div>
</Layout>

<style>
  .category-container {
    margin: -2rem;
  }

  .category-hero {
    padding: 4rem 2rem;
    text-align: center;
    color: white;
    background-size: cover;
    background-position: center;
  }

  .category-hero h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
  }

  .category-hero p {
    max-width: 800px;
    margin: 0 auto;
    font-size: 1.2rem;
  }

  .subcategories {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    padding: 2rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  .subcategory-link {
    background: var(--primary-color);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 999px;
    text-decoration: none;
    transition: transform 0.3s ease;
  }

  .subcategory-link:hover {
    transform: translateY(-2px);
    background: var(--accent-color);
  }

  .creatures-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    padding: 2rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  .creature-card {
    background: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    transition: transform 0.3s ease;
    text-decoration: none;
    color: inherit;
  }

  .creature-card:hover {
    transform: translateY(-5px);
  }

  .creature-image {
    height: 200px;
    overflow: hidden;
  }

  .creature-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .creature-info {
    padding: 1.5rem;
  }

  .creature-info h3 {
    color: var(--primary-color);
    margin-bottom: 0.5rem;
  }

  .period {
    color: var(--accent-color);
    font-weight: bold;
    margin-bottom: 0.5rem;
  }

  .subcategory {
    color: var(--secondary-color);
  }

  @media (max-width: 768px) {
    .category-hero h1 {
      font-size: 2rem;
    }

    .category-hero p {
      font-size: 1rem;
    }
  }
</style>